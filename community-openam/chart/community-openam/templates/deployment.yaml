apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "community-openam.fullname" . }}
  labels:
{{ include "community-openam.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "community-openam.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "community-openam.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      hostAliases:
        - ip: "127.0.0.1"
          hostnames:
          - "{{ .Values.openam.domain }}"
      securityContext:
        # Set fsGroup to openam's user GID so that the PVC can be accessed inside the container
        fsGroup: 0
      volumes:
      - name: config-storage
        persistentVolumeClaim:
          claimName: {{ template "community-openam.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
          volumeMounts:
            - mountPath: /usr/openam/config #This is the directory inside the container
              name: config-storage
          env:
          - name: OPENAM_HOST
            {{ if .Values.openam.domain }}
            value: {{ .Values.openam.domain }}
            {{ else }}
            value: "openam.example.com"
            {{ end }}
          - name: OPENAM_ADMIN_PASSWORD
            {{ if .Values.openam.amadminPassword }}
            value: {{ .Values.openam.amadminPassword }}
            {{ else }}
            value: "Anypoint1379"
            {{ end }}


          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /
              port: https
            initialDelaySeconds: 0
            periodSeconds: 300
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /openam
              port: https
            initialDelaySeconds: 0
            periodSeconds: 300
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
